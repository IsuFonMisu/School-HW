#include <iostream>
#include <string>
using namespace std;

// berat duzenli

double calorieCalculation(int min, int weight, double MET){
	return min*MET*3.5*weight/200 ; 
}

double minuteCalculation(double difference, double excersizeMET, int weight){

	return difference*200/(excersizeMET*3.5*weight);
}

void getInput (string excersize,int& mins,int& reps, int& liftedWeight ) 
{
	if (excersize == "Weight Lifting"){
	cout << excersize << ": ";
	cin >> mins >> reps >> liftedWeight;
	}
	else{
		cout << excersize << ": ";
		cin >> mins >> reps ;
	}


}

bool inputCheck(int weight, int reps, int minute, int liftedweight = 1){
	if (weight < 30 ){
		cout << "Weight out of range!" << endl;
		return false;
	}
	else if (liftedweight <=0 || liftedweight > 35){
		cout << "Lifted weight out of range!" << endl;
		return false;
	}
	else if (reps < 0 || reps > 50){
		cout << "Reps out of range!" << endl;
		return false;
	}
	else if (minute < 0 || minute > 2000){
		cout << "Minute out of range!" << endl;
		return false;
	}
	else {
		return true;
	}
	}

void calculateMET(int reps, string excercise, double& MET) {
	if (excercise == "Lung"){
		if (reps < 15){
			MET = 3;
		}
		else if (reps <30){
			MET = 6.5;
		}
		else {
			MET = 10.5;
		}
	}
	else if (excercise == "Push"){
		if (reps <15){
			MET = 4;
		}
		else {
			MET = 7.5;
		}
	}
	else if (excercise == "Pull"){
		if (reps <25){
			MET=5;
		}
		else{
			MET=9;
		}
	}
	}

void calculateWeightLiftMET(int reps, int liftedWeight, double& MET ){

	if (liftedWeight < 5){
		if (reps < 20){
			MET=3;
		}
		else if (reps < 40){
			MET=5.5;
		}
		else{
			MET=10;
		}
	}
	else if (liftedWeight < 15){
		if (reps < 20){
			MET=4;
		}
		else if (reps < 40){
			MET=7.5;
		}
		else{
			MET=12;
		}
	
	}
	else {
		if (reps < 20){
			MET=5;
		}
		else if (reps < 40){
			MET=9;
		}
		else{
			MET=13.5;
		}
	}


}

void displayResults(double difference, double total, int weight,
					double lungeMET, double pushupMET, double pullupMET, double weightliftMET, 
					double lungeCalorie, double pushupCalorie, double pullupCalorie, double weightliftCalorie){


						cout << "From lunges, you burned "<< lungeCalorie <<" calories." << endl ;
						cout << "From push ups, you burned "<< pushupCalorie <<" calories." << endl ;						
						cout << "From pull ups, you burned "<< pullupCalorie <<" calories." << endl ;
						cout << "From weight lifting, you burned "<< weightliftCalorie <<" calories." << endl ;
						cout << "You burned " << total << " calories." << endl<<endl;

						if(difference==0){
							cout << "Congratulations! You have reached your goal!"<< endl;
						}

						else if (difference < 0){
							cout << "You have surpassed your goal! You can eat something worth "<< -difference <<" calories :)" << endl ;
						}

						else {
							double 
							LungLeftMin = minuteCalculation(difference, lungeMET, weight),
							PullLeftMin = minuteCalculation(difference, pullupMET, weight),
							PushLeftMin = minuteCalculation(difference, pushupMET, weight),
							LiftLeftMin = minuteCalculation(difference, weightliftMET, weight);

							cout << "You did not reach your goal by " << difference <<" calories." << endl;
							cout <<	"You need to do lunges " << LungLeftMin << " minutes more to reach your goal or,"<<endl<<
								"You need to do push ups "<< PushLeftMin <<" minutes more to reach your goal or," <<endl<<
								"You need to do pull ups "<< PullLeftMin <<" minutes more to reach your goal or,"<<endl<<
								"You need to do weight lifting "<<LiftLeftMin <<" minutes more to reach your goal." << endl;


						}


}

void computeResults (int weight, int goal, int repsLunge, int repsPushUp, 
					 int repsPullUp, int repsWeightLift, int minLunge, int minPushUp, 
					 int minPullUp, int minWeightLift, int liftedWeight){
	double LungMET, PushMET, PullMET, LiftMET,
		LungBurned, PushBurned, PullBurned, LiftBurned, totalBurned,
		difference;
	
	calculateMET(repsLunge, "Lung", LungMET);
	calculateMET(repsPullUp, "Pull", PullMET);
	calculateMET(repsPushUp, "Push", PushMET);
	calculateWeightLiftMET(repsWeightLift, liftedWeight, LiftMET);

	LungBurned = calorieCalculation(minLunge, weight, LungMET);
	PushBurned = calorieCalculation(minPushUp, weight, PushMET);
	PullBurned = calorieCalculation(minPullUp, weight, PullMET);
	LiftBurned = calorieCalculation(minWeightLift, weight, LiftMET);
	totalBurned= LungBurned + PushBurned + PullBurned + LiftBurned;

	difference= goal - totalBurned;

	displayResults(difference, totalBurned, weight, LungMET, PushMET, PullMET, LiftMET, LungBurned, PushBurned,PullBurned,LiftBurned);


}



int main (){
	string name ="" ;
	int Weight, LungMin, LungRep, PushMin, PushRep, PullMin, PullRep, LiftMin, LiftRep, LiftWeight, Goal, a ;

	cout << "Please enter your name: ";
	cin >> name;
	cout << "Welcome " << name << ", please enter your weight(kg): ";
	cin >> Weight;
	cout << name << ", please enter minutes and repetitions in a week for the activities below."<< endl;
	
	getInput("Lunges", LungMin, LungRep,a);
	getInput("Push Ups", PushMin, PushRep,a);
	getInput("Pull Ups", PullMin, PullRep,a);
	cout << name << ", please enter minutes, repetitions and lifted weight in a week for the activities below." << endl;
	getInput("Weight Lifting", LiftMin, LiftRep, LiftWeight);


	cout << name << ", please enter your weekly calorie burn goal: ";
	cin >> Goal;
	
	if (inputCheck(Weight, LungRep, LungMin) == false ||
		inputCheck(Weight, PushRep, PushMin) == false ||
		inputCheck(Weight, PullRep, PullMin) == false ||
		inputCheck(Weight, LiftRep, LiftMin, LiftWeight) == false) {
			return 0;
	}
	computeResults(Weight, Goal, LungRep, PushRep, PullRep, LiftRep, LungMin, PushMin,PullMin,LiftMin,LiftWeight);

	return 0;


}
